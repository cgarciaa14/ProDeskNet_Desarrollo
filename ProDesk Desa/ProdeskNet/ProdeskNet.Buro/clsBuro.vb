Imports System.IO.File
Imports System.IO
Imports Microsoft.Win32
Imports System.Data.SqlClient
Imports System.Configuration
Imports System.Net.Sockets
Imports System.Text
Imports ProdeskNet.BD
Imports ProdeskNet.Catalogos
Imports buro05

#Region "Trackers"
'Tracker INC-B-2139:JDRA:Excede Segmentos TL, se aumenta a 150
#End Region

Public Class clsBuro
    '-------------------------- INICIO PDK_BURO_CONFIGURACION-------------------------- 
#Region "Variables"
    Private intPDK_ID_BURO_CONFIGURACION As Integer = 0
    Private intPDK_CONF_FRECUENCIA As Integer = 0
    Private strPDK_CONF_PF_SERVER As String = String.Empty
    Private strPDK_CONF_PF_PORT As String = String.Empty
    Private strPDK_CONF_PF_USUARIO As String = String.Empty
    Private strPDK_CONF_PF_CONTRASENA As String = String.Empty
    Private strPDK_CONF_PM_SERVER As String = String.Empty
    Private strPDK_CONF_PM_PORT As String = String.Empty
    Private strPDK_CONF_PM_USUARIO As String = String.Empty
    Private strPDK_CONF_PM_CONTRASENA As String = String.Empty

#End Region
#Region "Propiedades"
    Public Property PDK_ID_BURO_CONFIGURACION() As Integer
        Get
            Return intPDK_ID_BURO_CONFIGURACION
        End Get
        Set(ByVal value As Integer)
            intPDK_ID_BURO_CONFIGURACION = value
        End Set
    End Property
    Public Property PDK_CONF_FRECUENCIA() As Integer
        Get
            Return intPDK_CONF_FRECUENCIA
        End Get
        Set(ByVal value As Integer)
            intPDK_CONF_FRECUENCIA = value
        End Set
    End Property
    Public Property PDK_CONF_PF_SERVER() As String
        Get
            Return strPDK_CONF_PF_SERVER
        End Get
        Set(ByVal value As String)
            strPDK_CONF_PF_SERVER = value
        End Set
    End Property
    Public Property PDK_CONF_PF_PORT() As String
        Get
            Return strPDK_CONF_PF_PORT
        End Get
        Set(ByVal value As String)
            strPDK_CONF_PF_PORT = value
        End Set
    End Property
    Public Property PDK_CONF_PF_USUARIO() As String
        Get
            Return strPDK_CONF_PF_USUARIO
        End Get
        Set(ByVal value As String)
            strPDK_CONF_PF_USUARIO = value
        End Set
    End Property
    Public Property PDK_CONF_PF_CONTRASENA() As String
        Get
            Return strPDK_CONF_PF_CONTRASENA
        End Get
        Set(ByVal value As String)
            strPDK_CONF_PF_CONTRASENA = value
        End Set
    End Property
    Public Property PDK_CONF_PM_SERVER() As String
        Get
            Return strPDK_CONF_PM_SERVER
        End Get
        Set(ByVal value As String)
            strPDK_CONF_PM_SERVER = value
        End Set
    End Property
    Public Property PDK_CONF_PM_PORT() As String
        Get
            Return strPDK_CONF_PM_PORT
        End Get
        Set(ByVal value As String)
            strPDK_CONF_PM_PORT = value
        End Set
    End Property
    Public Property PDK_CONF_PM_USUARIO() As String
        Get
            Return strPDK_CONF_PM_USUARIO
        End Get
        Set(ByVal value As String)
            strPDK_CONF_PM_USUARIO = value
        End Set
    End Property
    Public Property PDK_CONF_PM_CONTRASENA() As String
        Get
            Return strPDK_CONF_PM_CONTRASENA
        End Get
        Set(ByVal value As String)
            strPDK_CONF_PM_CONTRASENA = value
        End Set
    End Property
#End Region
#Region "Metodos"
    Public Sub New(ByVal intRegistro As Integer)
        Dim strSQL As New StringBuilder
        Dim BD As New ProdeskNet.BD.clsManejaBD
        Try
            If intRegistro = 0 Then Exit Sub
            strSQL.Append(" SELECT ")
            strSQL.Append(" PDK_ID_BURO_CONFIGURACION,")
            strSQL.Append(" PDK_CONF_FRECUENCIA,")
            strSQL.Append(" PDK_CONF_PF_SERVER,")
            strSQL.Append(" PDK_CONF_PF_PORT,")
            strSQL.Append(" PDK_CONF_PF_USUARIO,")
            strSQL.Append(" PDK_CONF_PF_CONTRASENA,")
            strSQL.Append(" PDK_CONF_PM_SERVER,")
            strSQL.Append(" PDK_CONF_PM_PORT,")
            strSQL.Append(" PDK_CONF_PM_USUARIO,")
            strSQL.Append(" PDK_CONF_PM_CONTRASENA")
            strSQL.Append(" FROM PDK_BURO_CONFIGURACION")
            strSQL.Append(" WHERE PDK_ID_BURO_CONFIGURACION = " & intRegistro)

            Dim ds As DataSet = BD.EjecutarQuery(strSQL.ToString)
            If ds.Tables.Count = 0 OrElse ds.Tables(0).Rows.Count = 0 Then
                Throw New Exception("No se encontro informacion con esa clave")
            End If
            With ds.Tables(0).Rows(0)
                Me.intPDK_ID_BURO_CONFIGURACION = .Item("PDK_ID_BURO_CONFIGURACION")
                Me.intPDK_CONF_FRECUENCIA = .Item("PDK_CONF_FRECUENCIA")
                Me.strPDK_CONF_PF_SERVER = .Item("PDK_CONF_PF_SERVER")
                Me.strPDK_CONF_PF_PORT = .Item("PDK_CONF_PF_PORT")
                Me.strPDK_CONF_PF_USUARIO = .Item("PDK_CONF_PF_USUARIO")
                Me.strPDK_CONF_PF_CONTRASENA = .Item("PDK_CONF_PF_CONTRASENA")
                Me.strPDK_CONF_PM_SERVER = .Item("PDK_CONF_PM_SERVER")
                Me.strPDK_CONF_PM_PORT = .Item("PDK_CONF_PM_PORT")
                Me.strPDK_CONF_PM_USUARIO = .Item("PDK_CONF_PM_USUARIO")
                Me.strPDK_CONF_PM_CONTRASENA = .Item("PDK_CONF_PM_CONTRASENA")
            End With
        Catch ex As Exception
            Throw New Exception("Error al buscar los registros")
        End Try
    End Sub
    Public Shared Function ObtenTodos() As DataSet
        Dim objException As Exception = Nothing
        Dim strSQL As New StringBuilder
        Dim BD As New ProdeskNet.BD.clsManejaBD
        Try
            strSQL.Append(" SELECT ")
            strSQL.Append(" A.PDK_ID_BURO_CONFIGURACION,")
            strSQL.Append(" A.PDK_CONF_FRECUENCIA,")
            strSQL.Append(" A.PDK_CONF_PF_SERVER,")
            strSQL.Append(" A.PDK_CONF_PF_PORT,")
            strSQL.Append(" A.PDK_CONF_PF_USUARIO,")
            strSQL.Append(" A.PDK_CONF_PF_CONTRASENA,")
            strSQL.Append(" A.PDK_CONF_PM_SERVER,")
            strSQL.Append(" A.PDK_CONF_PM_PORT,")
            strSQL.Append(" A.PDK_CONF_PM_USUARIO,")
            strSQL.Append(" A.PDK_CONF_PM_CONTRASENA")
            strSQL.Append(" FROM PDK_BURO_CONFIGURACION A ")
            Dim ds As DataSet = BD.EjecutarQuery(strSQL.ToString)
            Return ds
        Catch ex As Exception
            objException = New Exception("Error al buscar los registros de PDK_BURO_CONFIGURACION")
            Throw objException
        End Try
    End Function

    Public Sub Guarda()

        Dim strSql As String = String.Empty
        Dim strFechaOp As String = String.Empty
        Dim objException As Exception = Nothing
        Dim BD As New ProdeskNet.BD.clsManejaBD
        Try
            If intPDK_ID_BURO_CONFIGURACION = 0 Then
                strSql = "INSERT INTO PDK_BURO_CONFIGURACION " & _
                                "(" & _
                            "PDK_CONF_FRECUENCIA,PDK_CONF_PF_SERVER,PDK_CONF_PF_PORT,PDK_CONF_PF_USUARIO,PDK_CONF_PF_CONTRASENA,PDK_CONF_PM_SERVER,PDK_CONF_PM_PORT,PDK_CONF_PM_USUARIO,PDK_CONF_PM_CONTRASENA)" & _
                            " VALUES ( " & intPDK_CONF_FRECUENCIA & ", '" & strPDK_CONF_PF_SERVER & "','" & strPDK_CONF_PF_PORT & "','" & strPDK_CONF_PF_USUARIO & "','" & strPDK_CONF_PF_CONTRASENA & "','" & strPDK_CONF_PM_SERVER & "','" & strPDK_CONF_PM_PORT & "','" & strPDK_CONF_PM_USUARIO & "','" & strPDK_CONF_PM_CONTRASENA & "' " & _
                            ")"
            Else
                ActualizaRegistro()
                Exit Sub
            End If
            BD.EjecutarQuery(strSql)
            'VerificaRegDefault("", "", "", 0, 0, bd)
        Catch ex As Exception
            Throw New Exception("Error al guardar PDK_BURO_CONFIGURACION ")
        End Try
    End Sub
    Private Sub ActualizaRegistro()
        Dim strSql As String = String.Empty
        Dim strFechaOp As String = String.Empty
        'Dim db As BD.ManejaBD = Nothing
        Dim BD As New ProdeskNet.BD.clsManejaBD
        Try
            'db = New BD.ManejaBD()
            'strFechaOp = ObtenFechaServidor().ToString("yyyy-MM-dd")
            strSql = "UPDATE PDK_BURO_CONFIGURACION " & _
               "SET " & _
                 " PDK_CONF_FRECUENCIA = " & intPDK_CONF_FRECUENCIA & ", " & _
                " PDK_CONF_PF_SERVER = '" & strPDK_CONF_PF_SERVER & "'," & _
                " PDK_CONF_PF_PORT = '" & strPDK_CONF_PF_PORT & "'," & _
                " PDK_CONF_PF_USUARIO = '" & strPDK_CONF_PF_USUARIO & "'," & _
                " PDK_CONF_PF_CONTRASENA = '" & strPDK_CONF_PF_CONTRASENA & "'," & _
                " PDK_CONF_PM_SERVER = '" & strPDK_CONF_PM_SERVER & "'," & _
                " PDK_CONF_PM_PORT = '" & strPDK_CONF_PM_PORT & "'," & _
                " PDK_CONF_PM_USUARIO = '" & strPDK_CONF_PM_USUARIO & "'," & _
                " PDK_CONF_PM_CONTRASENA = '" & strPDK_CONF_PM_CONTRASENA & "'" & _
             " WHERE PDK_ID_BURO_CONFIGURACION=  " & intPDK_ID_BURO_CONFIGURACION
            BD.EjecutarQuery(strSql)
            'VerificaRegDefault("", "", "", 0, 0, db)
        Catch ex As Exception
            Throw New Exception("Error al actualizar PDK_BURO_CONFIGURACION")
        End Try
    End Sub
#End Region
    '-------------------------- FIN PDK_BURO_CONFIGURACION-------------------------- 

End Class

Public Class clsBuroINTL

#Region "Variables"
    Private strPDK_BURO_SOLICITUD As String = String.Empty
    Private strPDK_BURO_PERSONA As String = String.Empty
    Private strPDK_BURO_IDBURO As String = String.Empty
    Private strPDK_BURO_RESULTADOBURO As String = String.Empty
    Private strPDK_BURO_USUARIO As String = String.Empty
    Private strPDK_RFC As String = String.Empty
    Private strPdk_tipo_persona As String = String.Empty
    Private strMensajeError As String = String.Empty
    Private strRespuesta As String = ""
#End Region

#Region "Propiedades"

    Public Property mystrMensajeError() As String
        Get
            Return strMensajeError
        End Get
        Set(ByVal value As String)
            strMensajeError = value
        End Set
    End Property

    Public Property pdk_tipo_persona() As String
        Get
            Return strPdk_tipo_persona
        End Get
        Set(ByVal value As String)
            strPdk_tipo_persona = value
        End Set
    End Property
    Public Property PDK_BURO_SOLICITUD() As String
        Get
            Return strPDK_BURO_SOLICITUD
        End Get
        Set(ByVal Value As String)
            strPDK_BURO_SOLICITUD = Value
        End Set
    End Property
    Public Property PDK_BURO_PERSONA() As String
        Get
            Return strPDK_BURO_PERSONA
        End Get
        Set(ByVal Value As String)
            strPDK_BURO_PERSONA = Value
        End Set
    End Property
    Public Property PDK_BURO_IDBURO() As String
        Get
            Return strPDK_BURO_IDBURO
        End Get
        Set(ByVal Value As String)
            strPDK_BURO_IDBURO = Value
        End Set
    End Property
    Public Property PDK_BURO_RESULTADOBURO() As String
        Get
            Return strPDK_BURO_RESULTADOBURO
        End Get
        Set(ByVal Value As String)
            strPDK_BURO_RESULTADOBURO = Value
        End Set
    End Property
    Public Property PDK_BURO_USUARIO() As String
        Get
            Return strPDK_BURO_USUARIO
        End Get
        Set(ByVal Value As String)
            strPDK_BURO_USUARIO = Value
        End Set
    End Property

    Public Property PDK_RFC() As String
        Get
            Return strPDK_RFC
        End Get
        Set(ByVal value As String)
            strPDK_RFC = value
        End Set
    End Property
#End Region

#Region "Metodos"
    Public Sub New()

    End Sub

    Dim clsErr As New Catalogos.clsErrores

    Public Function PDK_BURO_OBTENBURO() As Boolean

        Dim ds As New Data.DataSet
        Dim strBuro As String = String.Empty
        Dim strResultado As String = String.Empty
        Dim strSQL As String = String.Empty
        Dim dsDataset As New Data.DataSet
        Dim IDREPORTE As String = String.Empty        

        Try
            'strBuro = PDK_OBTEN_REPORTE_BURO(PDK_BURO_SOLICITUD, PDK_BURO_PERSONA, PDK_BURO_USUARIO, IDREPORTE, PDK_RFC)
            'PDK_BURO_RESULTADOBURO = strBuro

            strResultado = PDK_OBTEN_REPORTE_BURO(PDK_BURO_SOLICITUD, PDK_BURO_PERSONA, PDK_BURO_USUARIO, IDREPORTE, PDK_RFC)

            If IDREPORTE = "0" Then
                mystrMensajeError = strResultado
                Return False
            Else
                Return True
            End If
        Catch ex As Exception
            mystrMensajeError = "ERROR:" & ex.Message.ToString
            Return False
        End Try
    End Function

    Private Function PDK_OBTEN_REPORTE_BURO( _
                ByVal IdSolicitud As String, _
                ByVal IDPersona As String, _
                ByVal USUARIO_SYS As String, _
                ByRef IDREPORTE As String, _
                ByRef RFC As String) As String

        ' Variables
        Dim intBuro As Integer
        Dim strConsulta As String = String.Empty
        'Dim strIP As String = String.Empty
        'Dim strPort As String = String.Empty
        'Dim intTimeOut As Integer = 0
        'Dim strExistente As String = String.Empty
        Dim strCadenaEnvio As String = String.Empty
        Dim strRespuestaBuro As String = String.Empty
        'Dim strResultadoBuro As String = String.Empty
        Dim dsDataSet As New Data.DataSet
        Dim strSQL As String = String.Empty
        'Dim strError As String = String.Empty
        Dim strRespuestaCalificaBuro As String = String.Empty
        Dim BD As New ProdeskNet.BD.clsManejaBD

        Dim objDirectory As Directory
        Dim objFile As System.IO.File
        Dim oWrite As System.IO.StreamWriter
        Dim oFile As System.IO.File
        Dim strPath As String = System.Configuration.ConfigurationSettings.AppSettings.Item("LOG_BURO")
        Dim strArchivoLogBuro As String = "BURO_" & Now.Day & "-" & Now.Month & "-" & Now.Year & "-" & Now.Hour & "-" & Now.Second & ".log"
        Dim blnResouestaErrorBuro As Boolean = False

        ' SE CREA UN DIRECTORIO 
        Try
            Directory.CreateDirectory(strPath & "\" & Now.Month & "-" & Now.Year & "\")
            If File.Exists(strPath & "\" & Now.Month & "-" & Now.Year & "\" & strArchivoLogBuro) Then
                File.Delete(strPath & "\" & Now.Month & "-" & Now.Year & "\" & strArchivoLogBuro)
            End If
            oWrite = File.CreateText(strPath & "\" & Now.Month & "-" & Now.Year & "\" & strArchivoLogBuro)
        Catch EX As Exception
            oWrite.Close()
        End Try


        Try

            'Genera cadena a buro de credito.

            strSQL = "EXEC sp_PDK_BURO_EXISTEREPORTEBURO " & IdSolicitud & "," & USUARIO_SYS & ",'',0,0,'" & RFC & "', 1"
            dsDataSet = BD.EjecutarQuery(strSQL)

            strConsulta = dsDataSet.Tables(0).Rows(0).Item(0).ToString
            intBuro = dsDataSet.Tables(0).Rows(0).Item(1).ToString
            'strIP = dsDataSet.Tables(0).Rows(0).Item(2).ToString
            'strPort = dsDataSet.Tables(0).Rows(0).Item(3).ToString
            'intTimeOut = CInt(dsDataSet.Tables(0).Rows(0).Item(4).ToString)
            'strExistente = dsDataSet.Tables(0).Rows(0).Item(5).ToString
            'strResultadoBuro = dsDataSet.Tables(0).Rows(0).Item(2).ToString
            strCadenaEnvio = dsDataSet.Tables(0).Rows(0).Item(2).ToString

            ' valida y corrige la cadena de envio al buro
            strSQL = "declare @salida varchar(max); exec spValidaCorrigeBuro '" & strCadenaEnvio.Replace("'", "''") & "', @salida output, 1; select @salida;"
            strCadenaEnvio = BD.EjecutarQuery(strSQL).Tables(0).Rows(0)(0).ToString

            If strCadenaEnvio.Contains("ERROR:") Or strConsulta = 0 Then
                strRespuestaBuro = strCadenaEnvio
                If strCadenaEnvio.Contains("valida") Then
                    clsErr.fnObtenError(1)
                    mystrMensajeError = clsErr.fc_Error
                    'mystrMensajeError = "Error en la validación de la cadena a buro. 'Favor de validarlo con INCREDIT'"
                ElseIf strCadenaEnvio.Contains("ejecuta") Then
                    clsErr.fnObtenError(2)
                    mystrMensajeError = clsErr.fc_Error
                    'mystrMensajeError = "Error al generar la cadena de envio a buro. 'Favor de validarlo con INCREDIT'"
                End If

            Else
                'consulta buro
                strRespuestaBuro = pdk_Valida_Existe_Buro(strCadenaEnvio)
                If strRespuestaBuro = "" Then
                    strRespuestaBuro = PDK_BURO_SOLICITA_REPORTE_BURO(CStr(IDPersona), strCadenaEnvio, oWrite)
                End If
                'strIP, strPort, , intTimeOut
            End If

            'ACTUALIZAMOS LA RESPUESTA DE BURO.
            oWrite.WriteLine("ACTUALIZAMOS LA RESPUESTA DE BURO")
            strSQL = "EXEC sp_PDK_BURO_EXISTEREPORTEBURO " & IdSolicitud & "," & USUARIO_SYS & ",'" & strRespuestaBuro.Trim.Replace("'", "''") & "'," & intBuro & ",1,'" & RFC & "'"
            dsDataSet = BD.EjecutarQuery(strSQL)

            'If strRespuestaBuro.Length < 10 Or strRespuestaBuro.Contains("Se encontro un error al ejecutar el proceso:") Then 'En caso de error

            '    blnResouestaErrorBuro = True

            '    If strRespuestaBuro = "-1" Then
            '        strSQL = "EXEC sp_PDK_BURO_EXISTEREPORTEBURO " & intBuro & "," & USUARIO_SYS & ",'4'," & intBuro & ",2,'" & RFC & "'"
            '        dsDataSet = BD.EjecutarQuery(strSQL)
            '        strResultadoBuro = "4"

            '    Else
            '        strSQL = "EXEC sp_PDK_BURO_EXISTEREPORTEBURO " & intBuro & "," & USUARIO_SYS & ",'" & strResultadoBuro & "'," & intBuro & ",1,'" & RFC & "'"
            '        dsDataSet = BD.EjecutarQuery(strSQL)
            '        strResultadoBuro = dsDataSet.Tables(0).Rows(0).Item(0).ToString
            '    End If
            'Else

            If strRespuestaBuro.Contains("ERROR:") Or strConsulta = 0 Then
                If strRespuestaBuro.Contains("Se produjo un error durante el intento de conexión" & strRespuestaBuro) Then
                    clsErr.fnObtenError(5)
                    mystrMensajeError = clsErr.fc_Error
                    'mystrMensajeError = "Buro no disponible 'verificarlo con incredit'"
                ElseIf strRespuestaBuro.Contains("A connection attempt failed because the connected party did not properly respond after a period of time") Then
                    clsErr.fnObtenError(5)
                    mystrMensajeError = clsErr.fc_Error
                ElseIf strRespuestaBuro.Contains("Se produjo un error durante el intento de conexión ya que la parte conectada no respondió adecuadamente tras un periodo de tiempo") Then
                    clsErr.fnObtenError(5)
                    mystrMensajeError = clsErr.fc_Error
                End If
                strRespuestaCalificaBuro = "0"
            Else
                oWrite.WriteLine("CALIFICA Y SEPARA LA RESPUESTA DE BURO ")
                'CALIFICA Y SEPARA LA RESPUESTA DE BURO 
                strRespuestaCalificaBuro = PDK_BURO_CALIFICA_BURO(intBuro, IdSolicitud)

                'strResultadoBuro = strRespuestaCalificaBuro
                'If IsNumeric(strRespuestaCalificaBuro) Then
                '    If strRespuestaBuro.Contains("NO AUTENTICADO") Then
                '        strSQL = "EXEC sp_PDK_BURO_EXISTEREPORTEBURO " & intBuro & "," & USUARIO_SYS & ",'" & strRespuestaCalificaBuro & "'," & intBuro & ",2,'" & RFC & "'"
                '        dsDataSet = BD.EjecutarQuery(strSQL)
                '        strRespuestaBuro = "4"
                '    ElseIf strRespuestaCalificaBuro = "2" Then
                '        strSQL = "EXEC sp_PDK_BURO_EXISTEREPORTEBURO " & intBuro & "," & USUARIO_SYS & ",'" & strRespuestaCalificaBuro & "'," & intBuro & ",3,'" & RFC & "'"
                '        dsDataSet = BD.EjecutarQuery(strSQL)
                '        strRespuestaCalificaBuro = dsDataSet.Tables(0).Rows(0).Item(0).ToString
                '    Else
                '        strSQL = "EXEC sp_PDK_BURO_EXISTEREPORTEBURO " & intBuro & "," & USUARIO_SYS & ",'" & strRespuestaCalificaBuro & "'," & intBuro & ",2,'" & RFC & "'"
                '        dsDataSet = BD.EjecutarQuery(strSQL)
                '        strMensajeError = strRespuestaBuro
                '        strRespuestaBuro = "-1"
                '    End If
                'End If
            End If

            '    If dsDataSet.Tables(0).Rows.Count > 0 Then 



            '    Else
            '        strSQL = "EXEC sp_PDK_BURO_EXISTEREPORTEBURO " & intBuro & "," & USUARIO_SYS & ",'" & strResultadoBuro & "'," & intBuro & ",3,'" & RFC & "'"
            '        dsDataSet = BD.EjecutarQuery(strSQL)
            '        strResultadoBuro = dsDataSet.Tables(0).Rows(0).Item(0).ToString
            '    End If

            '    oWrite.WriteLine("------------------------------------")
            '    oWrite.WriteLine("GUARDA EN TABLAS DE BURO NUEVO")
            '    PDK_BURO_GUARDA_TABLAS(intBuro, USUARIO_SYS)
            '    oWrite.WriteLine("------------------------------------")

            'End If
            'End If

            oWrite.WriteLine("------------------------------------")

            If strRespuestaBuro.Contains("ERROR:") Or strRespuestaCalificaBuro = "0" Then
                IDREPORTE = "0"
                PDK_OBTEN_REPORTE_BURO = mystrMensajeError                
            Else
                IDREPORTE = intBuro
                PDK_OBTEN_REPORTE_BURO = strRespuestaBuro ' strRespuestaCalificaBuro
            End If

            oWrite.Close()
            Exit Function

        Catch ex As Exception
            IDREPORTE = "0"
            'PDK_OBTEN_REPORTE_BURO = "0"
            'strMensajeError = "ERROR " & ex.Message.ToString
            PDK_OBTEN_REPORTE_BURO = "ERROR " & ex.Message.ToString

        End Try

        'If blnResouestaErrorBuro Then
        '    Try
        '        Dim objEnviaCorreoBuro As New EnviaCorreoBuro
        '        objEnviaCorreoBuro.ENVIA("Consulta efecutada a Buro de Credito", "emarin@telepro.com.mx", "Errores ocurridos en la consulta a Buro de Credito", strPath & "\" & Now.Month & "-" & Now.Year & "\" & strArchivoLogBuro)
        '    Catch ex As Exception
        '    End Try
        'End If

    End Function

    Dim WithEvents llamaburoClienteVPN As New ClienteVPN
    Private Sub ClienteVPN_CierraConexion() Handles llamaburoClienteVPN.CierraConexion
        Dim respuesta As String = "Error"
    End Sub
    Private Sub ClienteVPN_Respuesta(ByVal xml As String, ByRef respuesta As Boolean) Handles llamaburoClienteVPN.Respuesta
        strRespuesta = xml
    End Sub

    Public Function pdk_Valida_Existe_Buro(strCadenaEnvio) As String
        Dim BD As New ProdeskNet.BD.clsManejaBD
        Try
            Return BD.EjecutarQuery("SELECT PDK_BUR_REP_RESPUESTA FROM PDK_BURO_REPORTE WHERE PDK_BUR_REP_ENVIO = '" & strCadenaEnvio & "' AND PDK_BUR_REP_RESPUESTA NOT LIKE '%ERROR%' AND PDK_BUR_REP_RESPUESTA NOT LIKE '%ERRRAR%' AND PDK_BUR_REP_RESPUESTA NOT LIKE '%-1%' AND PDK_BUR_REP_RESPUESTA LIKE '%INTL11%' AND PDK_BUR_REP_FEC_RESPUESTA <= DATEADD(MM, 1, GETDATE())").Tables(0).Rows(0)(0)
        Catch ex As Exception
            Return ""
        End Try        
    End Function
    Public Function PDK_BURO_SOLICITA_REPORTE_BURO( _
        ByVal strIDPersona As String, _
        ByVal strConsulta As String, _
        ByRef oWrite As System.IO.StreamWriter, _
        Optional ByVal TimeOut As Short = 30) As String

        'ByVal strIP As String, _
        'ByVal strPort As String, _



        Dim connbur As New buro05.cssburo
        'DLL Buro de Conexion Buro de Credito. by d@vE_®
        'Dim connbur As New ClienteVPN
        Dim datconbur As New clsBuro(1)

        Try

            'Dim Buro As New Object

            'llamaburoClienteVPN.IPHost = datconbur.PDK_CONF_PF_SERVER
            'llamaburoClienteVPN.Puerto = datconbur.PDK_CONF_PF_PORT            
            'llamaburoClienteVPN.Conectar()
            'llamaburoClienteVPN.Consulta(strConsulta)
            'llamaburoClienteVPN = Nothing

            'YAM-P-208 Descomentar para Producción, Comentar para Pruebas
            'connbur.myport = datconbur.PDK_CONF_PF_PORT
            'connbur.cadena = strConsulta
            'connbur.Main({datconbur.PDK_CONF_PF_SERVER})
            'strRespuesta = connbur.myresult
            'Fin YAM-P-208 Descomentar para Producción

            'YAM-P-208 Descomentar para Pruebas, Comentar para Producción
            strRespuesta"
            'strRespuesta"
            'strRespuesta = "INTL11                         MX1010AF5536101110PN06ORTEGA0009CERVANTES0207ALFREDO0408211219820513OECA8212216560602SR0802MX090111101M1201MPA26PA DE LAS ROSAS MZ 7 LT 7A0112LA PRIMAVERA0207TLALPAN0402DF05051427006081411201307105543475879120831052010PA28CLLE PA MARGARITAS MZ4 LT34A0109MIRADOR I0207TLALPAN0312CD DE MEXICO0402DF050514748070856450371120830042010PA31CLLE PA MARGARITAS MZ 4 LT 34 A0016GUSTAVO A MADERO0312CD DE MEXICO0402DF0505142010608051120060708564503711001H120802042009PA16PENAS NEGRAS 2 B0009TEPETATAL0216GUSTAVO A MADERO0312CD DE MEXICO0402DF050507130120811032009PE26SERVICIO ADMON INTEGRAN SA0014INSUR SUR 36960210PENA POBRE0412CD DE MEXICO0502DF060514060071055172082731108150520051202N$130490001401MPE18CAPTA S  A  DE C V0014INSUR SUR 36960117ATIZAPAN SN ANGEL0412CD DE MEXICO0502DF060514060071055172131031108051120071202N$1305130001401MTL08131120130214COMUNICACIONES030100501I0601R0702CL0802N$1101Z12036261308031020131408061020131708311020131801A210413752204626+2304100024010260201TL08121120130214COMUNICACIONES030100501I0601R0702CL0802N$1101Z120101308200920131408221020131708311020131801A2104143422020+23042200240102602012701028083009201329083009201336010370830092013380200TL08121120130214COMUNICACIONES030100501I0601R0702CL0802N$1101Z120101308121220121408131220121708311020131801A210329922020+2303299240102602012710111111111028083009201329083112201236010370831122012380200TL08121120130214COMUNICACIONES030100501I0601R0702CL0802N$1101Z120101308220220111408221020131708311020131801A2104168522020+2304160024010260201272411111121215431111111111128083009201329083006201136041261370830112012380205TL08121120130214COMUNICACIONES030100501I0601R0702CL0802N$1101Z120101308220220111408230220111708311020131801A2101022020+23041600240102602012724111111111111111111111111280830092013290830062011TL08111120130205BANCO030100501I0601R0702CC0802N$1101Z12031991308291120091408151020131508151020131708311020131801A2104299722051301+23043000240102501126020127241111111211211111111111112808300920132908061120093002IA3603172370828022013380202TL08251020130213CIA Q' OTORGA030100501I0601O0702CC0802N$1101Z120436651308200220121408161020131508191020131708201020131801A2104133022053815+2401025011260201272011111111211121111111280820092013290823022012310302036044911370820092012380202TL08151020130205BANCO030100501I0601R0702CC0802N$1101Z120443141308290720081408130720121508290720121708300920131801A2104300022054314+230430002404431425021426029727249999999965432111111111112808310820132908171220093002UP36044314370831012013380297TL08221020130209SERVICIOS030100501I0601O0702MI0802N$1101Z120101308010920091408250920131508020920131708300920131801A210356322020+2303740240102501126020127241121111113121111111111112808310820132908310520103603500370830112012380203TL08151020130205BANCO030100501I0601R0702CC0802N$1101Z120463571308210520081408180920131508220820121708300920131801A2104300022020+230430002401025021026020127249999965432132111111111112808310820132908221220093002UP36046357370830042013380297TL08061220120210FINANCIERA030100501I0601R0702CL0802N$1101Z120101308170320091408240420121608281120121708301120121801A2104400022020+23044000240102602012723UUUUUUU1UUUUUUUUUUU1UUU280831102012290831122010TL08081220110214COMUNICACIONES030100501I0601O0702CL0802N$1101Z120101308030220101408071120111508121120111608301120111708301120111801A2104289822020+2304150024010260201271932221211122121111122808311020112908300420103002CL3603423370831102010380202TL08141220100214COMUNICACIONES030100501I0601O0702CL0802N$1101Z120101308020420091408051020101508031120101608301120101708301120101801A210385222020+23042000240102602012714111111111111112808311020102908300920093002CCTL08011120110205BANCO030100501I0601R0702CC0802N$1101Z120101308290720081408030220101508240120101608311220091708040220101801A2104300022020+23043000240102501126020127181111111111121XX2112808190120102908190820083002CA3603350370828022009380202TL08011120110205BANCO030100501I0601R0702CC0802N$1101Z120101308210520081408030220101508250120101608311220091708040220101801A2104300022020+23043000240102501126020127201111111111121XX211112808190120102908190620083002CA3603300370831102008380202IQ08191120130110AF553610110209IN CREDIT0402AU060100701I09010IQ08191120130110AF553610110209IN CREDIT0402AU060100701I09010IQ08191120130110AF553610110209IN CREDIT0402AU060100701I09010IQ0819112013000400000215BURO DE CREDITO0402AU0502MX06090000000000801Y09011IQ08141120130110AF553610110209IN CREDIT0402AU060100701I09010IQ08061120130205BANCO0402CL060100701I09010IQ08021020130110AF553610100209IN CREDIT0402AU060100701I09010IQ08180920130205BANCO0402CC060100701I09010IQ08250820130216CONSUMIDOR FINAL0402UK060100701I09010IQ08140620130205BANCO0402CC060100701I09010IQ08120320130205BANCO0402CC060100701I09010IQ08171220120205BANCO0402CC060100701I09010IQ08141220120205BANCO0402CC060100701I09010IQ08200220120213CIA Q' OTORGA0402CC060100701I09010IQ08150220120213CIA Q' OTORGA0402CC060100701I09010IQ08310120120216CONSUMIDOR FINAL0402UK060100701I09010RS08210220060002000102000202000302000402000502000602140702000802000904001510040000110400151204000513040001140400081502001602091701N1805NNNNN1901N2002MX210900001568322090000156992310000010056+24090000043142509000015161260306127090000000002810000000000+29090000000003009000000000310200320201330200340821052008350820092013360215370825082013380200390800000000400200410800000000SC08BC SCORE00030040104000602031660302460403205SC08BC SCORE000300701040579020217030221040220ES050544500097864338070102**"
            'strRespuesta = "INTL11                         MX0000AA2505100710PN08CASTILLO0209INOCENCIO0308MARTINEZ0510CAXI7701280802MX090111101M1201MPA12CDA BOTON 640108EL RELOJ0208COYOACAN0402DF050504640120827072015IQ08050820150110AA250510070206YAMAHA0402AU060100701IIQ08270720150110AA250510070206YAMAHA0402AU060100701I0801YRS08270720150002000102000202000302000402000502000602000702000802000904000010040000110400001204000013040000140400001502001602011701Y1805NYNNN1901N310200320200330200340800000000350800000000360201370827072015380200390800000000400200410800000000HI080508201500030010116BURO DE CREDITO 0248VER MENSAJES DE COINCIDENCIA POR REP. DE CREDITOHR080508201500030020116BURO DE CREDITO 0221NO EXISTE INFORMACIONSC08BC SCORE00030070104-009SC08BC SCORE00030040104-003ES050077500090489055250102**"
            'strRespuesta = "INTL1280935232                 MX0000ZTXXXXXXXX10PN08MARTINEZ0008MARTINEZ0209ELIZABETH0510MAAE3802031201F1518MAAE380203MDFLRL00PA08PINON 410015JRDNES ECATEPEC0315ECATEPEC DE MOR0402EM05055504007077871224120814091995TL08080720130205BANCO0416XXXXXXXXXXXXXXXX0501I0601I0702PN0802N$1002721101S12031521308010820111408230620131508130820111708300620131801A2104850022056327+230485002401026020127161111111111111111280824052013290811022012IQ08160720130110ZTXXXXXXXX0216RC marca de agua0402CC060100701IIQ08060420120205BANCO0402CC060100701IRS08171119950002000102000202000302000402000502000602010702000802000904000110040001110400001204000013040000140400001502001602001701N1805NNNNN1901N2002N$210102201023020+2401025010260102704850028056327+290103003152310200320200330200340801082011350801082011360201370806042012380200390800000000400200410800000000SC08BC SCORE0003004010400100202710303210040254SC08BC SCORE000300701040999020215030222040212ES05009540009XXXXXXXXX0102**"
            'strRespuesta = "ERRRAR25                         0014NO AUTENTICADOES05000660002**"
            'strRespuesta = "ERRRAR25                         0318AF55361010M0Ls2786ES05000700002**"
            'strRespuesta = "ERRRAR25                         1604PN05ES05000520002**"
            'Fin YAM-P-208 Descomentar para Pruebas

            Return strRespuesta

        Catch ex As Exception

            'strRespuesta = "-1"                         ' Bandera de Error
            'strMensajeError = ex.Message.ToString
            strRespuesta = "ERROR: " & ex.Message.ToString
            Return strRespuesta

        End Try

    End Function

    Private Function PDK_BURO_CALIFICA_BURO( _
            ByVal IdReporte As Integer,
            ByVal IdSolicitud As String) As String

        Dim reporte As Object = Nothing
        Dim calificacion_Renamed As New Object
        Dim strsql As String = String.Empty
        Dim strRespuestaBuro As String = String.Empty
        Dim strConexion As String = String.Empty
        Dim strError As String = String.Empty
        Dim dsDataSet As New DataSet
        Dim BD As New ProdeskNet.BD.clsManejaBD

        Try
            strsql = "SELECT PDK_BUR_REP_RESPUESTA FROM PDK_BURO_REPORTE WHERE PDK_ID_BURO = " & IdReporte
            dsDataSet = BD.EjecutarQuery(strsql)

            strRespuestaBuro = String.Empty
            If dsDataSet.Tables(0).Rows.Count > 0 Then strRespuestaBuro = dsDataSet.Tables(0).Rows(0).Item(0).ToString & ""
            If strRespuestaBuro.Trim.Length <> 0 Then
                If Mid(strRespuestaBuro, 1, 4) = "ERRR" Then
                    ' La respuesta de buro fue un error
                    PDK_BURO_CALIFICA_BURO = "0"
                    '----------- separa mensaje de error buro de credito -----------------------                    
                    clsErr.fnObtenError(BD.EjecutarQuery("exec sp_GetErrorBuro '" & strRespuestaBuro & "'").Tables(0).Rows(0)(0).ToString)
                    mystrMensajeError = clsErr.fc_Error
                    'mystrMensajeError = "Ocurrio un error en la respuesta del Buro de credito."
                    Exit Function
                End If
                If Mid(strRespuestaBuro, 48, 1) = "0" Then                    
                    PDK_BURO_CALIFICA_BURO = "0"
                    clsErr.fnObtenError(24)
                    'mystrMensajeError = clsErr.fc_Error
                    mystrMensajeError = "No se encontraron datos del cliente. 'El reporte sera generado como nuevo expediente'."
                    'Exit Function
                End If
                PDK_BURO_CALIFICA_BURO = PRDSK_BURO_SEPARA_REPORTE(IdReporte, strRespuestaBuro, strConexion, IdSolicitud)                
            Else
                PDK_BURO_CALIFICA_BURO = "0"
                clsErr.fnObtenError(25)
                mystrMensajeError = clsErr.fc_Error
                'mystrMensajeError = "La longitud del archivo de respuesta de buro es invalida." & IdReporte
            End If
        Catch ex As Exception
            PDK_BURO_CALIFICA_BURO = "0"
            clsErr.fnObtenError(26)
            mystrMensajeError = clsErr.fc_Error
            'mystrMensajeError = "Ocurrio un error en la respuesta de buro." & IdReporte
        End Try
    End Function


    Private Function PRDSK_BURO_SEPARA_REPORTE( _
           ByRef IdReporte As Integer, _
           ByRef strReporte As String, _
           ByRef strConexion As String, _
           ByRef IdSolicitud As String) As String

        Dim j As Object
        Dim campo, INTL, strsql As Object
        Dim strProc As String
        Dim ptr As Integer
        Dim longitud, i As Short
        Dim numSegmento As Short
        Dim PN(21) As String 'Arreglo para segmento de nombre
        Dim PA(3, 13) As String 'Arreglo para segmento de direccion
        Dim PE(1, 20) As String 'Arreglo para segmento de empleo
        'Tracker INC-B-2139:JDRA:Excede Segmentos TL, se aumenta a 150
        Dim TL(150, 43) As String 'Arreglo para segmento de cuentas
        Dim IQ(100, 10) As String 'Arreglo para segmento de consultas efectuadas
        Dim RS(2, 42) As String 'Arreglo para segmento de resumen del reporte
        Dim AL(39, 4) As String 'Arreglo de alertas Hawk
        Dim CR(1) As String 'Arreglo de Declaraciones
        Dim SC(14, 7) As String 'Arreglo de Score
        Dim dsDataset As New DataSet

        Dim bolResultado As Boolean = False

        Dim BD As New ProdeskNet.BD.clsManejaBD

        Try
            'strReporte = Replace(strReporte, "", "")
            'Separa el encabezado INTL
            INTL = Left(strReporte, 49)
            'Inicializa segmento de nombre (PN)
            For i = 0 To UBound(PN)
                PN(i) = ""
            Next
            ptr = 50

            'Separa los campos del segmento nombre y los guarda en el arreglo
            If Mid(strReporte, ptr, 2) = "PN" Then
                ptr = ptr + 2
                longitud = CShort(Mid(strReporte, ptr, 2))
                ptr = ptr + 2
                PN(0) = Mid(strReporte, ptr, longitud)
                ptr = ptr + longitud
                campo = Mid(strReporte, ptr, 2)
                numSegmento = 1
                Do While Not PDK_BURO_SEGMENTO(CStr(campo), numSegmento)
                    ptr = ptr + 2
                    longitud = CShort(Mid(strReporte, ptr, 2))
                    ptr = ptr + 2
                    PN(CShort(campo) + 1) = Mid(strReporte, ptr, longitud)
                    ptr = ptr + longitud
                    campo = Mid(strReporte, ptr, 2)
                Loop
            End If

            'Inicializa segmento de Direccion
            For i = 0 To UBound(PA)
                For j = 0 To UBound(PA, 2)
                    PA(i, j) = ""
                Next
            Next
            numSegmento = 2
            campo = PDK_BURO_CARGA_SEGMENTO(PA, CStr(campo), ptr, strReporte, numSegmento, "PA")

            'Inicializa segmento de Empleo
            For i = 0 To UBound(PE)
                For j = 0 To UBound(PE, 2)
                    PE(i, j) = ""
                Next
            Next
            If campo = "PE" Then
                numSegmento = 3
                campo = PDK_BURO_CARGA_SEGMENTO(PE, CStr(campo), ptr, strReporte, numSegmento, "PE")
            End If

            'Inicializa segmento de Cuentas
            For i = 0 To UBound(TL)
                For j = 0 To UBound(TL, 2)
                    TL(i, j) = ""
                Next
            Next
            If campo = "TL" Then
                numSegmento = 4
                campo = PDK_BURO_CARGA_SEGMENTO(TL, CStr(campo), ptr, strReporte, numSegmento, "TL")
            End If

            'Inicializa segmento de Consultas
            For i = 0 To UBound(IQ)
                For j = 0 To UBound(IQ, 2)
                    IQ(i, j) = ""
                Next
            Next
            If campo = "IQ" Then
                numSegmento = 5
                campo = PDK_BURO_CARGA_SEGMENTO(IQ, CStr(campo), ptr, strReporte, numSegmento, "IQ")
            End If

            'Inicializa segmento de Resumen del Reporte
            For i = 0 To UBound(RS)
                For j = 0 To UBound(RS, 2)
                    RS(i, j) = ""
                Next
            Next
            If campo = "RS" Then
                numSegmento = 6
                campo = PDK_BURO_CARGA_SEGMENTO(RS, CStr(campo), ptr, strReporte, numSegmento, "RS")
            End If

            'Inicializa segmento de Alertas
            For i = 0 To UBound(AL)
                For j = 0 To UBound(AL, 2)
                    AL(i, j) = ""
                Next
            Next
            If campo = "HI" Or campo = "HR" Then
                numSegmento = 8
                AL(0, 4) = campo
                campo = PDK_BURO_CARGA_SEGMENTO(AL, CStr(campo), ptr, strReporte, numSegmento, "AL")
            End If

            'Inicializa segmento de Declaraciones
            For i = 0 To UBound(CR)
                CR(i) = ""
            Next
            If campo = "CR" Then
                numSegmento = 9
                campo = PDK_BURO_CARGA_SEGMENTO(CR, CStr(campo), ptr, strReporte, numSegmento, "CR")
            End If

            'Inicializa segmento de SCORE
            For i = 0 To UBound(SC)
                For j = 0 To UBound(SC, 2)
                    SC(i, j) = ""
                Next
            Next
            If campo = "SC" Then
                numSegmento = 10
                campo = PDK_BURO_CARGA_SEGMENTO(SC, CStr(campo), ptr, strReporte, numSegmento, "SC")
            End If

            '**** Generacion e inserción de segmentos en base de datos
            If PN(0) <> "" Then
                strsql = " sp_PDK_BURO_InsReporteBuroNombre " & IdReporte & ",'" & PN(0) & "','" & PN(1) & "','" & PN(2) & "','" & PN(3) & "','" & PN(4) & "','" & PN(5) & "','" & PN(6) & "','" & PN(7) & "','" & PN(8) & "','" & PN(9) & "','" & PN(10) & "','" & PN(11) & "','" & PN(12) & "','" & PN(13) & "','" & PN(14) & "','" & PN(15) & "','" & PN(16) & "','" & PN(17) & "','" & PN(18) & "','" & PN(19) & "','" & PN(20) & "','" & PN(21) & "'," & IdSolicitud & ""
                'bolResultado = BD.EjecutarQuery(CStr(strsql))
                dsDataset = BD.EjecutarQuery(CStr(strsql))
            End If

            strProc = " sp_PDK_BURO_InsReporteBuroDireccion " & IdReporte
            For i = 0 To UBound(PA)
                If PA(i, 0) <> "" Then
                    strsql = ""
                    For j = 0 To UBound(PA, 2)
                        strsql = strsql & ", '" & PA(i, j) & "'"
                    Next
                    strsql &= "," & IdSolicitud & ""
                    'bolResultado = EjecutaQuery_Insert(CStr(strProc) & CStr(strsql))
                    dsDataset = BD.EjecutarQuery(CStr(strProc) & CStr(strsql))
                End If
            Next

            strProc = " sp_PDK_BURO_InsReporteBuroEmpleo " & IdReporte
            For i = 0 To UBound(PE)
                If PE(i, 0) <> "" Then
                    strsql = ""
                    For j = 0 To UBound(PE, 2)
                        strsql = strsql & ", '" & PE(i, j) & "'"
                    Next

                    strsql &= "," & IdSolicitud & ""

                    'bolResultado = EjecutaQuery_Insert(CStr(strProc) & CStr(strsql))
                    dsDataset = BD.EjecutarQuery(CStr(strProc) & CStr(strsql))
                End If
            Next

            strProc = " sp_PDK_BURO_InsReporteBuroCuenta " & IdReporte
            For i = 0 To UBound(TL)
                If TL(i, 0) <> "" Then
                    strsql = ""
                    For j = 0 To UBound(TL, 2)
                        If j < 40 Or j > 42 Then
                            If j = 23 And TL(i, j) <> "" Then
                                campo = Mid(TL(i, j), Len(TL(i, j)), 1)
                                If campo = "+" Or campo = "-" Then
                                    TL(i, j) = campo & Mid(TL(i, j), 1, Len(TL(i, j)) - 1)
                                End If
                            End If
                            strsql = strsql & ", '" & TL(i, j) & "'"
                        End If
                    Next
                    'bolResultado = EjecutaQuery_Insert(CStr(strProc) & CStr(strsql))
                    strsql &= "," & IdSolicitud & ""
                    dsDataset = BD.EjecutarQuery(CStr(strProc) & CStr(strsql))
                End If
            Next

            strProc = " sp_PDK_BURO_InsReporteBuroConsulta " & IdReporte
            For i = 0 To UBound(IQ)
                If IQ(i, 0) <> "" Then
                    strsql = ""
                    For j = 0 To UBound(IQ, 2)
                        strsql = strsql & ", '" & IQ(i, j) & "'"
                    Next

                    'bolResultado = EjecutaQuery_Insert(CStr(strProc) & CStr(strsql))
                    strsql &= "," & IdSolicitud & ""
                    dsDataset = BD.EjecutarQuery(CStr(strProc) & CStr(strsql))
                End If
            Next

            strProc = " sp_PDK_BURO_InsReporteBuroResumen " & IdReporte
            For i = 0 To UBound(RS)
                If RS(i, 0) <> "" Then
                    strsql = ""
                    For j = 0 To UBound(RS, 2)
                        If (j = 24 Or j = 29) And RS(i, j) <> "" Then
                            campo = Mid(RS(i, j), Len(RS(i, j)), 1)
                            If campo = "+" Or campo = "-" Then
                                RS(i, j) = campo & Mid(RS(i, j), 1, Len(RS(i, j)) - 1)
                            End If
                        End If
                        strsql = strsql & ", '" & RS(i, j) & "'"
                    Next
                    'bolResultado = EjecutaQuery_Insert(CStr(strProc) & CStr(strsql))
                    strsql &= "," & IdSolicitud & ""
                    dsDataset = BD.EjecutarQuery(CStr(strProc) & CStr(strsql))
                End If
            Next

            BD.EjecutarQuery("EXEC SP_GASTOS_BURO " & IdSolicitud)

            strProc = " sp_PDK_BURO_InsReporteBuroAlerta " & IdReporte
            For i = 0 To UBound(AL)
                If AL(i, 0) <> "" Then
                    strsql = ""
                    For j = 0 To UBound(AL, 2)
                        strsql = strsql & ", '" & AL(i, j) & "'"
                    Next
                    'bolResultado = EjecutaQuery_Insert(CStr(strProc) & CStr(strsql))
                    strsql &= "," & IdSolicitud & ""
                    dsDataset = BD.EjecutarQuery(CStr(strProc) & CStr(strsql))
                End If
            Next

            strProc = " sp_PDK_BURO_InsReporteBuroDeclaracion " & IdReporte
            strsql = ""
            If CR(0) <> "" Then
                strsql = strsql & ", '" & CR(0) & "','" & CR(1) & "'"
                'bolResultado = EjecutaQuery_Insert(CStr(strProc) & CStr(strsql))
                strsql &= "," & IdSolicitud & ""
                dsDataset = BD.EjecutarQuery(CStr(strProc) & CStr(strsql))
            End If

            strProc = " sp_PDK_BURO_InsReporteBuroScore " & IdReporte           'Aqui esta el error
            For i = 0 To UBound(SC)
                If SC(i, 0) <> "" Then
                    strsql = ""
                    For j = 0 To UBound(SC, 2)
                        If j <> 6 Then
                            strsql = strsql & ", '" & SC(i, j) & "'"
                        End If
                    Next
                    'bolResultado = EjecutaQuery_Insert(CStr(strProc) & CStr(strsql))
                    strsql &= "," & IdSolicitud & ""
                    dsDataset = BD.EjecutarQuery(CStr(strProc) & CStr(strsql) & ", " & pdk_tipo_persona)
                End If
            Next

            'strProc = " sp_PDK_BURO_InsReporteBuroScore " & IdReporte & ",'BC SCORE', '005', 700, '','','',''," & IdSolicitud & ", " & pdk_tipo_persona
            'dsDataset = BD.EjecutarQuery(CStr(strProc) & CStr(strsql))

            'strProc = " sp_PDK_BURO_InsReporteBuroScore " & IdReporte & ",'ICC', '004', 10, '','','',''," & IdSolicitud & ", " & pdk_tipo_persona
            'dsDataset = BD.EjecutarQuery(CStr(strProc) & CStr(strsql))


            PRDSK_BURO_SEPARA_REPORTE = "1"        
        Catch ex As Exception
            PRDSK_BURO_SEPARA_REPORTE = "0"
            clsErr.fnObtenError(27)
            mystrMensajeError = clsErr.fc_Error
        End Try

    End Function



    Private Function PDK_BURO_SEGMENTO(ByRef etiqueta As String, ByRef indice As Short) As Boolean

        Dim segmentos As New Object
        Dim i As Integer
        Try
            segmentos = New Object() {"PN", "PA", "PE", "TL", "IQ", "RS", "HI", "HR", "CR", "SC", "ES"}
            For i = indice To UBound(segmentos)
                If etiqueta = segmentos(i) Then
                    PDK_BURO_SEGMENTO = True
                    Exit Function
                End If
            Next
            PDK_BURO_SEGMENTO = False
        Catch ex As Exception
            PDK_BURO_SEGMENTO = False
        End Try
    End Function

    Private Function PDK_BURO_CARGA_SEGMENTO(ByRef o_segmento As Object, ByRef o_campo As String, ByRef o_ptr As Integer, ByVal strReporte As String, ByVal seg As Short, ByVal nomSegmento As String) As String
        Dim longitud As Object
        Dim ocurrencia As Short

        Try
            o_ptr = o_ptr + 2
            longitud = CShort(Mid(strReporte, o_ptr, 2))
            o_ptr = o_ptr + 2
            ocurrencia = 0
            If nomSegmento = "CR" Then
                o_segmento(0) = Mid(strReporte, o_ptr, longitud)
            Else
                o_segmento(ocurrencia, 0) = Mid(strReporte, o_ptr, longitud)
            End If
            o_ptr = o_ptr + longitud
            o_campo = Mid(strReporte, o_ptr, 2)
            Do While Not PDK_BURO_SEGMENTO(CStr(o_campo), seg)
                o_ptr = o_ptr + 2
                If nomSegmento = "CR" Then
                    longitud = CShort(o_segmento(0))
                    o_ptr = o_ptr + 2
                    o_segmento(CShort(o_campo) + 1) = Mid(strReporte, o_ptr, longitud).Replace("'", "''")
                Else
                    longitud = CShort(Mid(strReporte, o_ptr, 2))
                    o_ptr = o_ptr + 2
                    o_segmento(ocurrencia, CShort(o_campo) + 1) = Mid(strReporte, o_ptr, longitud).Replace("'", "''")
                End If
                o_ptr = o_ptr + longitud
                o_campo = Mid(strReporte, o_ptr, 2)
                If (nomSegmento = "AL" And (o_campo = "HI" Or o_campo = "HR")) Or (o_campo = nomSegmento) Then
                    o_ptr = o_ptr + 2
                    longitud = CShort(Mid(strReporte, o_ptr, 2))
                    o_ptr = o_ptr + 2
                    ocurrencia = ocurrencia + 1
                    If (ocurrencia > UBound(o_segmento)) Then
                        o_ptr = o_ptr + longitud
                        o_campo = Mid(strReporte, o_ptr, 2)
                        Exit Do
                    End If
                    o_segmento(ocurrencia, 0) = Mid(strReporte, o_ptr, longitud).Replace("'", "''")
                    If nomSegmento = "AL" Then
                        o_segmento(ocurrencia, 4) = o_campo
                    End If
                    o_ptr = o_ptr + longitud
                    o_campo = Mid(strReporte, o_ptr, 2)
                End If
            Loop
            PDK_BURO_CARGA_SEGMENTO = o_campo
        Catch EX As Exception
            PDK_BURO_CARGA_SEGMENTO = o_campo
        End Try
    End Function

    Private Function PDK_BURO_GUARDA_TABLAS(ByVal IdReporte As String, ByVal strUsuario As String) As Boolean
        Dim strProc As String = String.Empty
        Dim bolResultado As Boolean = False
        Dim BD As New ProdeskNet.BD.clsManejaBD
        Dim dsDataset As New DataSet


        Try
            strProc = " exec sp_PDK_BURO_PROCESO_BURO_INTEGRA_INFORMACION " & IdReporte & ",'" & strUsuario & "'"
            'bolResultado = EjecutaQuery_Insert(strProc.ToString)
            dsDataset = BD.EjecutarQuery(strProc.ToString)
            bolResultado = True
            Return bolResultado
        Catch ex As Exception
            Return False
        End Try
    End Function
#End Region


End Class
